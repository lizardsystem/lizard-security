[buildout]
index = http://packages.lizardsystem.nl
extends =
    http://packages.lizardsystem.nl/kgs/latest.cfg
find-links =
unzip = true
prefer-final = true
show-picked-versions = true
extensions =
    mr.developer
parts =
    mkdir
    django
    omelette
    console_scripts
    pyflakes
    sphinx
develop = .
eggs =
    lizard-security


[versions]
# Specific pins. We inherit lots of pins from the KGS, so if you add a
# development egg, you really need to un-pin it here.
lizard-security =
Werkzeug = 0.8.1
django-tls = 0.0.2
mock = 0.7.2
zc.buildout = 2.2.0
Django = 1.6.5
django-nose = 1.2
djangorecipe = 1.10
django-extensions = 1.3.8
django-compressor = 1.4
gunicorn = 19.0.0

[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/nensskel.git
# lizard-ui = svn https://office.nelen-schuurmans.nl/svn/Products/djangoapps/lizard-ui/trunk


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite


[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
project = lizard_security
projectegg = lizard_security
settings = testsettings
test = lizard_security
eggs =
    lizard-security
    lizard-security[test]



[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}
